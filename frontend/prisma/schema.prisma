// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String
  password      String
  walletAddress String?
  owner         Owner?
  Verifier      Verifier[]
  Beneficiary   Beneficiary[]
  Validator     Validator[]
}

model Owner {
  id                   Int                   @id @default(autoincrement())
  userId               Int                   @unique
  user                 User                  @relation(fields: [userId], references: [id])
  walletRecoveryConfig WalletRecoveryConfig?
  WillContract         WillContract[]
}

model WalletRecoveryConfig {
  id       Int        @id @default(autoincrement())
  ownerId  Int        @unique
  owner    Owner      @relation(fields: [ownerId], references: [id])
  verified Boolean
  Verifier Verifier[]
}

model Verifier {
  userId                 Int                  @id
  user                   User                 @relation(fields: [userId], references: [id])
  walletRecoveryConfigId Int
  walletRecoveryConfig   WalletRecoveryConfig @relation(fields: [walletRecoveryConfigId], references: [id])
  verified               Boolean
}

model WillContract {
  id                      Int           @id @default(autoincrement())
  ownerId                 Int
  owner                   Owner         @relation(fields: [ownerId], references: [id])
  deployedContractAddress String?
  activated               Boolean
  Beneficiary             Beneficiary[]
  Validator               Validator[]
}

model Beneficiary {
  userId         Int          @id
  user           User         @relation(fields: [userId], references: [id])
  willContractId Int
  willContract   WillContract @relation(fields: [willContractId], references: [id])
}

model Validator {
  userId         Int          @id
  user           User         @relation(fields: [userId], references: [id])
  willContractId Int
  willContract   WillContract @relation(fields: [willContractId], references: [id])
  validated      Boolean
}
